<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>4</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8</x>
      <y>200</y>
      <w>160</w>
      <h>664</h>
    </coordinates>
    <panel_attributes>application::GameController
--
-boardPane: Pane
-exitButton: Button
-rulesButton: Button
-namePlayer2: Label
-namePlayer1: Label
-statusLabel: Label
-outSqLineSEnd1: Button
-outSqLineSMid: Button
-outSqLineSEnd2: Button
-outSqLineWMid: Button
-outSqLineEMid: Button
-outSqLineNEnd1: Button
-outSqLineNMid: Button
-outSqLineNEnd2: Button
-midSqLineSEnd1: Button
-midSqLineSMid: Button
-midSqLineSEnd2: Button
-midSqLineWMid: Button
-midSqLineEMid: Button
-midSqLineNEnd1: Button
-midSqLineNMid: Button
-midSqLineNEnd2: Button
-innSqLineSEnd1: Button
-innSqLineSMid: Button
-innSqLineSEnd2: Button
-innSqLineWMid: Button
-innSqLineEMid: Button
-innSqLineNEnd1: Button
-innSqLineNMid: Button
-innSqLineNEnd2: Button
-humanStone1: Circle
-humanStone2: Circle
-humanStone3: Circle
-humanStone4: Circle
-humanStone5: Circle
-humanStone6: Circle
-humanStone7: Circle
-humanStone8: Circle
-humanStone9: Circle
-compStone1: Circle
-compStone2: Circle
-compStone3: Circle
-compStone4: Circle
-compStone5: Circle
-compStone6: Circle
-compStone7: Circle
-compStone8: Circle
-compStone9: Circle
-winner = 0: int
-MARGIN_LAYOUT_X_AND_Y = 22.5: double
-chosenStone: Stone
-destination: Point
-configGUI: GameShared
-clickedX: double
-clickedY: double
-filledLines: ArrayList&lt;Line&gt;
-allButtons = new Button[24]: Button[]
-humanStones = new Circle[9]: Circle[]
-compStones = new Circle[9]: Circle[]
--
+exitCurrentGame(ActionEvent event): void
+rulesPressed(ActionEvent event): void
~initialize(): void
+firstTurnPlay(): void
+promptEachTurn(): void
+endGame(): void
+humanStone1Clicked(MouseEvent event): void
+humanStone2Clicked(MouseEvent event): void
+humanStone3Clicked(MouseEvent event): void
+humanStone4Clicked(MouseEvent event): void
+humanStone5Clicked(MouseEvent event): void
+humanStone6Clicked(MouseEvent event): void
+humanStone7Clicked(MouseEvent event): void
+humanStone8Clicked(MouseEvent event): void
+humanStone9Clicked(MouseEvent event): void
+compStone1Clicked(MouseEvent event): void
+compStone2Clicked(MouseEvent event): void
+compStone3Clicked(MouseEvent event): void
+compStone4Clicked(MouseEvent event): void
+compStone5Clicked(MouseEvent event): void
+compStone6Clicked(MouseEvent event): void
+compStone7Clicked(MouseEvent event): void
+compStone8Clicked(MouseEvent event): void
+compStone9Clicked(MouseEvent event): void
+turnComputer(AIPlayer compPlayer): void
-compTurnPlaceStage(AIPlayer compPlayer): void
-compTurnMoveAdjacentStage(AIPlayer compPlayer): void
-compTurnJumpStage(AIPlayer compPlayer): void
-compTurnCheckMillAndEndTurn(AIPlayer compPlayer): void
+pointClicked(ActionEvent event): void
-humanTurnPlaceStage(Button button): boolean
-humanTurnMoveAdjacentStage(Button button): boolean
-humanTurnJumpStage(Button button): boolean
-humanTurnCheckMillAndEndTurn(): void
-setCoordinatesCircle(Point point): void
-chooseLocation(Button button): Point
-moveFromChosenStone(Stone stone): void
-removeChosenStone(Stone stone, int playerNum): void
-stonePlacedNewVisually(int playerNum): void
-stoneMovedVisually(int playerNum): void
-stoneRemovedVisually(int playerNum): void
-setStoneLayoutVisual(Circle circle): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>388</x>
      <y>60</y>
      <w>188</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>model::GameShared
--
-BOARDWIDTH = 30: double
-CENTER_X = 0: double
-CENTER_Y = 0: double
-player1: HumanPlayer
-player2: AIPlayer
-goFirst: int
-playerList: Player[]
-gameBoard: Board
-NO_ONE_NUM = 0: int
-HUMAN_PLAYER_NUM = 1: int
-COMP_PLAYER_NUM = 2: int
--
+setGameConfig(): void
+getGameBoard(): Board
+selectFirstPlayer(): HumanPlayer
+selectSecondPlayer(): AIPlayer
+getFirstPlayer(): int
+getPlayerNumOne(): int
+getPlayerNumTwo(): int
+getFilledLine(Player player): ArrayList&lt;Line&gt;
+setNewStoneInPlace(Player player, Point place): void
+move(Player player, Stone stone, Point place): void
+getStonesOfOpponent(Player opponent): ArrayList&lt;Stone&gt;
+moveStone(Player player, Stone stone, Point point): void
+removeStone(Player opponentPlayer, Stone stoneToBeRemoved): void
+getFreeStones(Player player): ArrayList&lt;Stone&gt;
+checkIfPointIsUnOccupied(Point point): int
+checkIfAjdacent(Stone stoneToSelect, Point pointToSelect): boolean
+getAdjacentPoints(Stone stoneToMove): ArrayList&lt;Point&gt;
+getPointsAsList(): ArrayList&lt;Point&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>596</x>
      <y>504</y>
      <w>200</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>model::AIPlayer
--
~name: String
-bestMoveStone: Stone
-pointToMoveTo: Point
--
+AIPlayer(String name, int num, boolean goFirst, Board gameBoard): ctor
+toString(): String
+getBestMoveStone(): Stone
+getRandomPoint(ArrayList&lt;Point&gt; pointsList): Point
+selectRandomStone(ArrayList&lt;Stone&gt; stonesList): Stone
+selectRandomStoneToRemove(ArrayList&lt;Stone&gt; stonesOfOpponent): Stone
+lookforBestRemove(Board board, Player opponentPlayer): Stone
+findStopMillByRemove(Board board, Player opponentPlayer): Stone
+lookForBestMove(Board board): Point
+checkMillByPlace(Board board): boolean
+checkStopMillByPlace(Board board): boolean
+checkTwoStepsFromMillByPlace(Board board): boolean
+checkMillByMove(Board board): boolean
+checkStopMillByMove(Board board): boolean
+checkTwoStepsFromMillByMove(Board board): boolean
+checkAllTwoSpaces(Stone stone, Board board): ArrayList&lt;Point[]&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1012</x>
      <y>412</y>
      <w>220</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>model::Line
--
-name: String
-endPoint1: Point
-midPoint: Point
-endPoint2: Point
-points: Point[]
--
+Line(String name, Point endPoint1, Point midPoint, Point endPoint2): ctor
+toString(): String
+getPoints(): // Why is this Point [] only whereas other getter methods use Point only?&#13;
Point[]
+getEndPoint1(): Point
+getEndPoint2(): Point
+getMidPoint(): Point
+isLineFilled(// check if all three points of a line are occupied for player&#13;
Player player): // check if all three points of a line are occupied for player&#13;
boolean
+doesLineContain(Stone stoneToCheck): boolean
+doesLineContainPoint(Point pointToBeChecked): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>732</x>
      <y>196</y>
      <w>184</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>model::Player
--
-stones: ArrayList&lt;Stone&gt;
-placedStones = 0: int
-totalStones = 9: int
-name: String
-playerNumber: int
-board: Board
-allPoints = new Point[24]: Point[]
--
+Player(String name, int num, boolean goFirst, Board gameBoard): ctor
+toString(): String
+getStones(): ArrayList&lt;Stone&gt;
+getNumberOfPlacedStones(): int
+getNumberOfTotalStones(): int
+increaseNumberOfPlacedStones(): void
+decreaseNumberOfOwnedStones(): void
+getPlayerNumber(): int
+getPointList(): Point[]
+getAdjacentPoints(Point currentPoint): ArrayList&lt;Point&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>956</x>
      <y>204</y>
      <w>260</w>
      <h>116</h>
    </coordinates>
    <panel_attributes>model::Square
--
-name: String
-lineN: Line
-lineW: Line
-lineE: Line
-lineS: Line
-lines: Line[]
--
+Square(String name, double size, double startX, double startY): ctor
+Square(Line northMidLine, Line westMidLine, Line eastMidLine, Line southMidLine): ctor
+getNorthLine(): Line
+getWestLine(): Line
+getEastLine(): Line
+getSouthLine(): Line
+toString(): String
+getLines(): Line[]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1040</x>
      <y>36</y>
      <w>188</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>model::Board
--
-outerSquare: Square
-midSquare: Square
-innerSquare: Square
-northMidLine: Line
-westMidLine: Line
-eastMidLine: Line
-southMidLine: Line
-squares: Square[]
--
+Board(double range, double centreXCoord, double centreYCoord): ctor
+getSquares(): Square[]
+displayBoard(): void
+getPointByCoordinates(double xcor, double ycor): Point
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>752</x>
      <y>32</y>
      <w>140</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>model::Game
--
-winner = 0: int
-textGameConfig: GameShared
--
+Game(): ctor
+play(): void
+displayScore(): void
+turnHumanPlayer(HumanPlayer humanPlayer): void
+turnComputer(AIPlayer compPlayer): void
+displayPointsAsList(): void
+displayAdjacentPoints(Stone stoneToMove): void
+displayStonesOfOpponent(Player opponent): void
+displayStones(): void
+displayFreeStones(Player player): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1068</x>
      <y>616</y>
      <w>116</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>model::Point
--
-x: double
-y: double
-occupiedStone: Stone
-occupiedPlayer: int
--
+Point(double xCoord, double yCoord): ctor
+getX(): double
+getY(): double
+getOccupiedStone(): Stone
+setOccupiedStone(Stone stone): void
+getOccupiedPlayer(): int
+setOccupiedPlayer(int occupiedPlayer): void
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>44</x>
      <y>48</y>
      <w>104</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>application::MainController
--
-ruleStage: Stage
-firstTutOpen = false: boolean
-quitButton: Button
-rulesButton: Button
-tutorialButton: Button
-playButton: Button
--
+playGame(ActionEvent event): void
+quitApp(ActionEvent event): void
+displayRules(ActionEvent event): void
~initialize(): void
+getTutOpen(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>448</x>
      <y>320</y>
      <w>112</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>model::Stone
--
-location: Point
-owner: Player
-isDead: boolean
--
+Stone(Player owner): ctor
+Stone(Player owner, Point location): ctor
+setLocation(Point location): void
+getLocation(): Point
+getOwner(): Player
+getDead(): boolean
+setDead(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>804</x>
      <y>508</y>
      <w>204</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>model::HumanPlayer
--
-name: String
--
+HumanPlayer(String name, int num, boolean goFirst, Board gameBoard): ctor
+selectStoneToMove(ArrayList&lt;Stone&gt; stonesToSelect): Stone
+selectDestination(ArrayList&lt;Point&gt; pointsList): Point
+selectStoneToRemove(ArrayList&lt;Stone&gt; stonesOfOpponent): Stone
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>212</x>
      <y>28</y>
      <w>96</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>application::TextApplication
--
-gameToPlay: Game
--
+TextApplication(): ctor
+TextApplication(Game game): ctor
+run(): void
+main(String[] args): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>212</x>
      <y>104</y>
      <w>100</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>application::MainApp
--
-stage: Stage
--
+start(Stage primaryStage): void
+changeScreen(String fxmlFile): void
+main(String[] args): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>820</x>
      <y>132</y>
      <w>12</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1124</x>
      <y>548</y>
      <w>12</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1080</x>
      <y>316</y>
      <w>48</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1080</x>
      <y>128</y>
      <w>64</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>556</x>
      <y>252</y>
      <w>184</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>440.0;10.0;10.0;280.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1216</x>
      <y>128</y>
      <w>12</w>
      <h>292</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;710.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>572</x>
      <y>72</y>
      <w>188</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>450.0;10.0;10.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>304</x>
      <y>48</y>
      <w>456</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;1120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>68</x>
      <y>140</y>
      <w>12</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>368</x>
      <y>8</y>
      <w>880</w>
      <h>736</h>
    </coordinates>
    <panel_attributes>model</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>320</w>
      <h>896</h>
    </coordinates>
    <panel_attributes>application</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>332</y>
      <w>92</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;430.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>848</x>
      <y>332</y>
      <w>48</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;440.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>316</x>
      <y>96</y>
      <w>60</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes>
    <additional_attributes>130.0;20.0;10.0;20.0</additional_attributes>
  </element>
</diagram>
